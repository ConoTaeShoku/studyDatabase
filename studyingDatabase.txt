--1.1)
create table T_JW (
no number(5) constraint pk_t_jw primary key,
name varchar2(10) not null,
sal number(10) default 2000 );

--1.2)
alter table t_jw
modify sal default 10000;

--1.3)
alter table t_jw
add(amount number(10));
alter table t_jw
drop column sal;


--2.1)
create table SC_MART (
GUBUN varchar2(20) not null,
PRODUCTS varchar2(20) unique,
S_VOLUME number(10),
T_SALE number(10));

--2.2)
insert into sc_mart values('문구류','연필',1,10000);
insert into sc_mart values('문구류','필통',2,20000);
insert into sc_mart values('문구류','자',1,5000);
insert into sc_mart values('문구류','책꽂이',1,20000);
insert into sc_mart values('문구류','노트',3,6000);
insert into sc_mart values('가전제품','냉장고',1,900000);
insert into sc_mart values('가전제품','라디오',3,300000);
insert into sc_mart values('가전제품','TV',2,1000000);
insert into sc_mart values('가전제품','세탁기',3,1800000);
insert into sc_mart values('화장품','모발화장품',10,100000);
insert into sc_mart values('화장품','립스틱',5,25000);
insert into sc_mart values('화장품','로션',10,15000);
insert into sc_mart values('화장품','향수',20,20000);

--2.3)
select distinct decode(gubun,'문구류','문구류',
'화장품', decode (products, '모발화장품','화장품','화장품'),
gubun) as 구분,
decode(gubun,'문구류','제 문구류',
'화장품', decode (products, '모발화장품','모발화장품','제 화장품'),
products) as 제품명,
decode(gubun,'문구류',(select sum(s_volume) from sc_mart where gubun='문구류'),
'화장품',decode (products, '모발화장품', s_volume,(select sum(s_volume) from sc_mart where gubun='화장품' and products<>'모발화장품')),s_volume) as 판매수량,
to_char( decode( gubun, '문구류', (select sum(t_sale) from sc_mart where gubun='문구류'),
'화장품', decode (products, '모발화장품', t_sale, (select sum(t_sale) from sc_mart where  gubun='화장품' and products<>'모발화장품')),
t_sale) ,'L999,999,999') as 총판매액
from sc_mart;


--3.1)
select employee_id as 사원번호,
first_name||' '||last_name as 이름
from employees
where first_name not like '%a%'
and last_name not like '%a%';

--3.2)
select to_char(hire_date,'yyyy/mm/dd') as 입사일,
to_char(add_months(hire_date,3),'yyyy/mm/dd') as 인턴종료일,
to_char(next_day(add_months(hire_date,3),'월요일'),'yyyy/mm/dd') as 정사원발령일
from employees;

--3.3)
select e.first_name as 이름,
e.salary as 급여,
d.department_id as 부서번호,
d.department_name as 부서명,
(select trunc(avg(salary))
from employees sube
group by department_id
having sube.department_id=e.department_id) as 부서평균급여
from employees e join departments d on e.department_id=d.department_id;

--3.4)
select e.department_id as 부서번호,
(select department_name from departments d where d.department_id=e.department_id) as 부서이름,
count(*) as 사원수,
max(salary) as 최고급여,
min(salary) as 최소급여,
trunc(avg(salary)) as 평균급여,
sum(salary) as 급여총합
from employees e
group by e.department_id
having count(*)>=3;